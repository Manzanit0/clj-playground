# OpenTelemetry Collector configuration.
# Note the 'service' configuration determines which 'receivers', 'processors',
# 'exporters' and 'extensions' components are enabled.

# Telemetry data receivers components
receivers:

  # Receives data in OpenTelemetry Protocol format
  otlp:
    protocols:

      # Enable gRPC receiver
      grpc:

      # Enable HTTP receiver
      http:



# Telemetry data processors components
processors:

  # Help avoid out-of-memory errors during high load
  memory_limiter:
    check_interval: 1s
    limit_mib: 50

  # Places received data in batches prior to export
  batch:



# Telemetry data exporters components
exporters:

  # Logs brief summary of telemetry data to console
  logging:

  # Exports traces to Jaeger via gRPC
  jaeger:
    endpoint: jaeger:14250
    tls:
      insecure: true

  # Exports traces to Zipkin
  zipkin:
    endpoint: "http://zipkin:9411/api/v2/spans"
    format: proto

  # Exports to Honeycomb via gRPC
  otlp/honeycomb:
    endpoint: "api.honeycomb.io:443"
    headers:
      "x-honeycomb-team": "YOUR_HONEYCOMB_TEAM_API_KEY"
      "x-honeycomb-dataset": "YOUR_HONEYCOMB_DATASET"

  # Exports to Honeycomb via HTTP
  otlphttp/honeycomb:
    endpoint: "https://api.honeycomb.io:443"
    headers:
      "x-honeycomb-team": "YOUR_HONEYCOMB_TEAM_API_KEY"
      "x-honeycomb-dataset": "YOUR_HONEYCOMB_DATASET"

  # Exports to Lightstep via gRPC
  otlp/lightstep:
    endpoint: "ingest.lightstep.com:443"
    headers:
      "lightstep-access-token": "YOUR_LIGHTSTEP_ACCESS_TOKEN"

  # Exports to Prometheus
  prometheus:
    endpoint: "0.0.0.0:9464"



# Collector extensions components
extensions:

  # Responds to health check requests
  health_check:



# Enable receivers, processors, exporters and extensions components
service:

  # Enable extensions components
  extensions: [ health_check ]

  # Enable pipelines of components for telemetry data
  pipelines:

    # Enable pipeline of components for traces
    traces:
      receivers: [ otlp ]
      processors: [ memory_limiter, batch ]
      exporters: [ logging, jaeger, zipkin ]    # Select desired exporters (configured above)

    # Enable pipeline of components for metrics
    metrics:
      receivers: [ otlp ]
      processors: [ memory_limiter, batch ]
      exporters: [ prometheus ]                 # Select desired exporters (configured above)
